#
# This file is automatically generated by autogen script
# DO NOT MODIFY IT, your change will disgarded
#
# --------------------------------------------------------------------------
# Installation Directories
# --------------------------------------------------------------------------
WINGRISBIDIR   = @WINGRISBIDIR@
BUILDDIR    = @BUILDDIR@ 
INSTSRCDIR  = @INSTSRCDIR@
GTKDEVDIR   = @GTKDEVDIR@
GCCBASEDIR  = @GCCBASEDIR@
PERLBASEDIR = @PERLBASEDIR@
NSISBINDIR  = @NSISBINDIR@
GETTEXTDIR  = @GETTEXTDIR@

# --------------------------------------------------------------------------
# Applications ...
# --------------------------------------------------------------------------
CPP       = g++.exe
CC        = gcc.exe
GDB       = $(GCCBASEDIR)/bin/gdb.exe
MSGFMT    = $(GETTEXTDIR)/msgfmt.exe
WINDRES   = $(GCCBASEDIR)/bin/windres.exe
PERL      = $(PERLBASEDIR)/bin/perl.exe
MAKENSIS  = $(NSISBINDIR)/makensis.exe
	
# --------------------------------------------------------------------------
# Project Directories
# --------------------------------------------------------------------------
OBJDIR    = $(BUILDDIR)/obj
LOCALE    = $(BUILDDIR)/lib/locale
VPATH     = ../src:../win32

.SUFFIXES:
.SUFFIXES: .c .o .res .rc .mo .po

# --------------------------------------------------------------------------
# Project source files lists
# SRCS = Source files of the Un*x distribution
# WIN32= Source files added for Windows
# --------------------------------------------------------------------------
SRCS      = @SRCS@
WIN32     = @WIN32@

# --------------------------------------------------------------------------
#  Project build files lists
# --------------------------------------------------------------------------
OBJS      = ${patsubst %.c,$(OBJDIR)/%.o,$(SRCS)} ${patsubst %.c,$(OBJDIR)/%.o,$(WIN32)}
RES       = $(OBJDIR)/Grisbi_private.res
LINKOBJS  = $(OBJS) $(RES)
EXE       = $(BUILDDIR)/grisbi.exe

# --------------------------------------------------------------------------
# Commands parameters
# --------------------------------------------------------------------------
INCS      = -I"../win32"  -I"../src"  -I"$(GCCBASEDIR)/include" -I"$(GTKDEVDIR)/include"  -I"$(GTKDEVDIR)/include/atk-1.0"  -I"$(GTKDEVDIR)/lib/glib-2.0/include"  -I"$(GTKDEVDIR)/include/glib-2.0"  -I"$(GTKDEVDIR)/lib/gtk-2.0/include"  -I"$(GTKDEVDIR)/include/gtk-2.0"  -I"$(GTKDEVDIR)/include/libiconv-1.9.1"  -I"$(GTKDEVDIR)/include/pango-1.0"  -I"$(GTKDEVDIR)/include/libxml2-2.4.12" 
CFLAGS    = -Wall $(INCS) -D _WIN32 -mms-bitfields -g -D _WIN32_IE=0x0400  

LIBS      =  $(GTKDEVDIR)/lib/atk-1.0.lib \
	     $(GTKDEVDIR)/lib/gdk_pixbuf-2.0.lib \
	     $(GTKDEVDIR)/lib/gdk-win32-2.0.lib \
	     $(GTKDEVDIR)/lib/glib-2.0.lib \
	     $(GTKDEVDIR)/lib/gmodule-2.0.lib \
	     $(GTKDEVDIR)/lib/gobject-2.0.lib \
	     $(GTKDEVDIR)/lib/gthread-2.0.lib \
	     $(GTKDEVDIR)/lib/gtk-win32-2.0.lib \
	     $(GTKDEVDIR)/lib/libintl.lib \
	     $(GTKDEVDIR)/lib/libatk-1.0.dll.a \
	     $(GTKDEVDIR)/lib/libgdk_pixbuf-2.0.dll.a \
	     $(GTKDEVDIR)/lib/libgdk-win32-2.0.dll.a \
	     $(GTKDEVDIR)/lib/libglib-2.0.dll.a \
	     $(GTKDEVDIR)/lib/libgmodule-2.0.dll.a \
	     $(GTKDEVDIR)/lib/libgobject-2.0.dll.a \
	     $(GTKDEVDIR)/lib/libgthread-2.0.dll.a \
	     $(GTKDEVDIR)/lib/libgtk-win32-2.0.dll.a \
	     $(GTKDEVDIR)/lib/libpango-1.0.dll.a \
	     $(GTKDEVDIR)/lib/libpangoft2-1.0.dll.a \
	     $(GTKDEVDIR)/lib/libpangowin32-1.0.dll.a \
	     $(GTKDEVDIR)/lib/pango-1.0.lib \
	     $(GTKDEVDIR)/lib/pangoft2-1.0.lib \
	     $(GTKDEVDIR)/lib/pangowin32-1.0.lib \
	     $(GTKDEVDIR)/lib/libiconv.lib \
	     $(GTKDEVDIR)/lib/libxml2.lib \
	     $(GTKDEVDIR)/lib/libofx.lib

LDFLAGS   = -L"$(GCCBASEDIR)/lib" -L"$(GTKDEVDIR)/lib/" $(LIBS) -mwindows 

# ==========================================================================
# TARGETS
# ==========================================================================
# command lines target
# --------------------------------------------------------------------------
#! Build all application and languages files.
all   : exe lang

#! Only build application related files
exe   : $(EXE)

lang = @LANGS@
	
#! Delete the builded files (.exe, .o, .mo) - does not affect files copied by the 'runtime' command
clean    : _clean-exe _clean-obj _clean-mo

#! Delete the builded files (.exe, .o, .mo) AND the files copied by the 'runtime' command
clean-all: _clean-exe _clean-obj _clean-mo _clean-runtime

# change target to set the default debugger
# debug : gdb to use console based gdb version
# debug : insight to use insight gui gdb interface
#! run the builded application in debug mode
debug : insight

#! run the builded application from the build directory
run   : exe 
	$(EXE)

gdb   : exe 
	$(GDB) -d ../src -d ../win32 $(EXE) 
insight:exe runtimes
	$(GCCBASEDIR)/bin/Insight/bin/usr/bin/insight.exe -d ../src -d ../win32 $(EXE)

	

# Usage targets
# --------------------------------------------------------------------------
usage :
	@echo "Usage: mingw32-make <target>"
	@echo "where <target> is one (more) of the following items"
	@$(PERL) -w -ne 'BEGIN{$$l=undef;} (/^\#\!/ )&& do {s/^\#\!\s*//;$$l=$$_ ;next;}; next unless($$l); m/^(.+)\s*:/; print "    $$1:\n        $$l"; $$l=undef;' Makefile

# configuration targets
# --------------------------------------------------------------------------
#! update the list of source files (.c) to build and link together (from src and win32 directories).
update:
	autogen --force Makefile

#! update the dependency rules of the Makefile.
depend: 
	makedepend -o.c -f../win32/Makefile -- $(CFLAGS) -- $(SRCS:%.c=../src/%.c) $(WIN32:%.c=../win32/%.c) 
	

# Build installer package
# --------------------------------------------------------------------------
check-installer:
	$(MAKENSIS) /DCHECK_SYNTAX=1 /DGRISBIDIR=$(WINGRISBIDIR) $(INSTSRCDIR)/grisbi-win32.nsi

#! build all packages
all-packages : full-package no-gtk-package no-doc-package app-only-package doc-only-package
	
full-package:
	$(MAKENSIS) /DGRISBIDIR=$(WINGRISBIDIR) /DINSTALL_FULL_MODE $(INSTSRCDIR)/grisbi-win32.nsi 
	
no-gtk-package:
	$(MAKENSIS) /DGRISBIDIR=$(WINGRISBIDIR) /DINSTALL_NO_GTK $(INSTSRCDIR)/grisbi-win32.nsi 

no-doc-package:
	$(MAKENSIS) /DGRISBIDIR=$(WINGRISBIDIR) /DINSTALL_NO_DOC $(INSTSRCDIR)/grisbi-win32.nsi 

app-only-package:
	$(MAKENSIS) /DGRISBIDIR=$(WINGRISBIDIR) /DINSTALL_APP_ONLY $(INSTSRCDIR)/grisbi-win32.nsi 

doc-only-package:
	$(MAKENSIS) /DGRISBIDIR=$(WINGRISBIDIR) /DINSTALL_DOC_ONLY $(INSTSRCDIR)/grisbi-win32.nsi 

patch-package:
	$(MAKENSIS) /DGRISBIDIR=$(WINGRISBIDIR) /DINSTALL_PATCH_MODE $(INSTSRCDIR)/grisbi-doc.nsi
	
# Clean targets
# --------------------------------------------------------------------------
_clean-exe:
	rm -f $(EXE) $(RES)

_clean-obj:
	rm -f $(OBJDIR)/*.o
	
_clean-mo:
	rm -f ../build/locale/*/LC_MESSAGES/grisbi.mo

_clean-runtime:
	autogen -f -runtime clean
# Build items targets
# --------------------------------------------------------------------------
$(EXE) : $(LINKOBJS) 
	@echo "Linking $@"
	@mkdir -p $(@D)
	+$(CC) -o $@ $(LINKOBJS) $(LDFLAGS)

$(OBJDIR)/%.o : %.c
	@echo "Compiling $<"
	@mkdir -p $(@D)
	+$(CC) -o $@ -c $< $(CFLAGS)

$(LOCALE)/%/LC_MESSAGES/grisbi.mo : ../po/%.po
	@echo "Compiling $<"
	@mkdir -p $(@D)
	+$(MSGFMT) -o $@ $< 
	
$(OBJDIR)/%.res : %.rc
	@echo "Compiling $<"
	@mkdir -p $(@D)
	+$(WINDRES) --input-format=rc -output-format=coff -output=$@ -input=$< 


#
# DEPENDENCIES
# 
$(RES) : Grisbi_private.rc Grisbi.ico

# :vim:ft=make:
