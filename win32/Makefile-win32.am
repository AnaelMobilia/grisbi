#
# This file is automatically generated by autogen script
# DO NOT MODIFY IT, your change will disgarded
#
# --------------------------------------------------------------------------
# Installation Directories
# --------------------------------------------------------------------------
BUILDDIR     = @BUILDDIR@ 
GTKDEVDIR    = @GTKDEVDIR@
GCCBASEDIR   = @GCCBASEDIR@
PERLBASEDIR  = @PERLBASEDIR@
GETTEXTDIR   = @GETTEXTDIR@

# --------------------------------------------------------------------------
# Applications ...
# --------------------------------------------------------------------------
CPP       = $(GCCBASEDIR)/bin/g++.exe
CC        = $(GCCBASEDIR)/bin/gcc.exe
GDB       = $(GCCBASEDIR)/bin/gdb.exe
MSGFMT    = $(GETTEXTDIR)/msgfmt.exe
WINDRES   = $(GCCBASEDIR)/bin/windres.exe
PERL      = $(PERLBASEDIR)/bin/perl.exe
	
# --------------------------------------------------------------------------
# Project Directories
# --------------------------------------------------------------------------
OBJDIR    = $(BUILDDIR)/obj
LOCALE    = $(BUILDDIR)/lib/locale
VPATH     = ../src:../win32

.SUFFIXES:
.SUFFIXES: .c .o .res .rc .mo .po

# --------------------------------------------------------------------------
# Project source files lists
# SRCS = Source files of the Un*x distribution
# WIN32= Source files added for Windows
# --------------------------------------------------------------------------
SRCS      = @SRCS@
WIN32     = @WIN32@

# --------------------------------------------------------------------------
#  Project build files lists
# --------------------------------------------------------------------------
OBJS      = ${patsubst %.c,$(OBJDIR)/%.o,$(SRCS)} ${patsubst %.c,$(OBJDIR)/%.o,$(WIN32)}
RES       = $(OBJDIR)/Grisbi_private.res
LINKOBJS  = $(OBJS) $(RES)
EXE       = $(BUILDDIR)/grisbi.exe

# --------------------------------------------------------------------------
# Commands parameters
# --------------------------------------------------------------------------
INCS      = -I"../win32" \
            -I"../src" \
            -I"$(GCCBASEDIR)/include" \
            -I"$(GTKDEVDIR)/include" \
            -I"$(GTKDEVDIR)/include/atk-1.0" \
            -I"$(GTKDEVDIR)/lib/glib-2.0/include" \
            -I"$(GTKDEVDIR)/include/glib-2.0" \
            -I"$(GTKDEVDIR)/lib/gtk-2.0/include" \
            -I"$(GTKDEVDIR)/include/gtk-2.0" \
            -I"$(GTKDEVDIR)/include/libiconv-1.9.1" \
            -I"$(GTKDEVDIR)/include/pango-1.0" \
            -I"$(GTKDEVDIR)/include/libxml2-2.4.12"

CFLAGS    = -Wall $(INCS) -D _WIN32 -mms-bitfields -g -D _WIN32_IE=0x0410  

LIBS      = -liberty -lz -latk-1.0 -lpango-1.0 -lpangowin32-1.0 -lpangoft2-1.0 \
	    -lglib-2.0 -lgobject-2.0  -lgmodule-2.0  -lgthread-2.0 \
            -lgtk-win32-2.0 -lgdk-win32-2.0 -lgdk_pixbuf-2.0 \
	    -lintl -liconv \
	    $(GTKDEVDIR)/lib/libxml2.lib \
	    $(GTKDEVDIR)/lib/libofx.lib

LDFLAGS   = -L"$(GCCBASEDIR)/lib" -L"$(GTKDEVDIR)/lib/" $(LIBS) -mwindows 

# ==========================================================================
# TARGETS
# ==========================================================================
# command lines target
# --------------------------------------------------------------------------
#! Build all application and languages files.
all   : exe lang

#! Only build application related files
exe   : $(EXE)

lang = @LANGS@
	
#! Delete the builded files (.exe, .o, .mo) - does not affect files copied by the 'runtime' command
clean    : clean-exe clean-obj clean-mo

#! Delete the builded files (.exe, .o, .mo) AND the files copied by the 'runtime' command
clean-all: clean-exe clean-obj clean-mo clean-runtime

# change target to set the default debugger
# debug : gdb to use console based gdb version
# debug : insight to use insight gui gdb interface
#! run the builded application in debug mode
debug : insight

#! run the builded application from the build directory
run   : exe 
	$(EXE)

gdb   : exe 
	$(GDB) -d ../src -d ../win32 $(EXE) 

insight:exe
	$(GCCBASEDIR)/bin/Insight/bin/usr/bin/insight.exe -d ../src -d ../win32 $(EXE)

	

# Usage targets
# --------------------------------------------------------------------------
usage :
	@echo "Usage: mingw32-make <target>"
	@echo "where <target> is one (more) of the following items"
	@$(PERL) -w -ne 'BEGIN{$$l=undef;} (/^\#\!/ )&& do {s/^\#\!\s*//;$$l=$$_ ;next;}; next unless($$l); m/^(.+)\s*:/; print "    $$1:\n        $$l"; $$l=undef;' Makefile

# configuration targets
# --------------------------------------------------------------------------
#! update the list of source files (.c) to build and link together (from src and win32 directories).
update:
	autogen --force Makefile

#! update the dependency rules of the Makefile.
depend: 
	makedepend -o.c -f../win32/Makefile -- $(CFLAGS) -- $(SRCS:%.c=../src/%.c) $(WIN32:%.c=../win32/%.c) 
	

# Clean targets
# --------------------------------------------------------------------------
clean-exe:
	rm -f $(EXE) $(RES)

clean-obj:
	rm -f $(OBJDIR)/*.o
	
clean-mo:
	rm -f ../build/locale/*/LC_MESSAGES/grisbi.mo

clean-runtime:
	autogen -f -runtime clean

# Build items targets
# --------------------------------------------------------------------------
$(EXE) : $(LINKOBJS) 
	@echo "Linking $@"
	@mkdir -p $(@D)
	+$(CC) -o $@ $(LINKOBJS) $(LDFLAGS)

$(OBJDIR)/%.o : %.c
	@echo "Compiling $<"
	@mkdir -p $(@D)
	+$(CC) -o $@ -c $< $(CFLAGS)

$(LOCALE)/%/LC_MESSAGES/grisbi.mo : ../po/%.po
	@echo "Compiling $<"
	@mkdir -p $(@D)
	+$(MSGFMT) -o $@ $< 
	
$(OBJDIR)/%.res : %.rc
	@echo "Compiling $<"
	@mkdir -p $(@D)
	+$(WINDRES) --input-format=rc --output-format=coff --output=$@ --input=$< 


#
# DEPENDENCIES
# 
$(RES) : Grisbi_private.rc Grisbi.ico

# :vim:ft=make:
