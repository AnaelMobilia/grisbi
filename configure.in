AC_INIT(src/main.c)
AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE(grisbidev,0.6.0)
AM_ACLOCAL_INCLUDE(macros)
AM_MAINTAINER_MODE

PACKAGE=grisbidev
VERSION=0.6.0
AC_SUBST(PACKAGE)
AC_SUBST(VERSION)

dnl Standard checks
AC_ISC_POSIX
AC_PROG_CC
AC_STDC_HEADERS
AC_PROG_RANLIB

dnl Check if we have backtrace support
AC_CHECK_FUNCS(backtrace)

dnl Check for NLS support.                                                      
ALL_LINGUAS="fr de da zh_CN he"
AM_GNU_GETTEXT
AC_CHECK_LIB(intl,main)

dnl
dnl Check for libofx
dnl
AC_CHECK_HEADER(libofx/libofx.h,,noofx=true)
AC_ARG_WITH(ofx,
    [  --without-ofx           build grisbi without ofx support [default=with]],
    [build_ofx=$withval],
    [build_ofx=yes]
)
if test x$build_ofx != xno
then
    if test x$noofx != xtrue
    then
        AC_CHECK_LIB(ofx, ofx_set_status_cb, OFX_0_7="-DOFX_0_7")
        LDFLAGS="${LDFLAGS} -lofx"
	CFLAGS="${CFLAGS} $OFX_0_7"
    else
        noofx=true
        AC_MSG_RESULT([Libofx header missing. Check your libofx installation])
	CFLAGS="${CFLAGS} -DNOOFX"
    fi
else
    noofx=true
    CFLAGS="${CFLAGS} -DNOOFX"
fi
AM_CONDITIONAL(NOOFX, test x$noofx = xtrue)


dnl
dnl Check for g2banking
dnl
AC_AQBANKING()
if test "$have_aqbanking" = "yes"; then
  CFLAGS="$CFLAGS $aqbanking_includes"
  LDFLAGS="$LDFLAGS $aqbanking_libs"
fi

AC_G2BANKING()
if test "$have_g2banking" = "yes"; then
  CFLAGS="$CFLAGS $g2banking_includes -DHAVE_G2BANKING"
  LDFLAGS="$LDFLAGS $g2banking_libs"
fi


dnl
dnl Standard GTK checks
dnl
PKG_CHECK_MODULES(GTK, gtk+-2.0 >= 2.2.0 glib-2.0 >= 2.2)
LDFLAGS="${LDFLAGS} ${GTK_LIBS}"
CFLAGS="${CFLAGS} ${GTK_CFLAGS}"


dnl
dnl XML2
dnl
PKG_CHECK_MODULES(XML2, libxml-2.0 >= 2.0)
LDFLAGS="${LDFLAGS} ${XML2_LIBS}"
CFLAGS="${CFLAGS} ${XML2_CFLAGS}"


dnl
dnl OpenSSL Check
dnl
PKG_CHECK_MODULES(OpenSSL, libssl, , nossl=true)
if test x$nossl != xtrue
then
	LDFLAGS="${LDFLAGS} ${OpenSSL_LIBS}"
	CFLAGS="${CFLAGS} ${OpenSSL_CFLAGS}"
else
	AC_MSG_RESULT([OpenSSL support not available, this Grisbi build will not be able to crypt/decrypt files.])
	CFLAGS="${CFLAGS} -DNOSSL"
fi


AC_SUBST(prefix)
AC_SUBST(CFLAGS)
AC_SUBST(LDFLAGS)

dnl ******************************
dnl Makefiles
dnl ******************************

AC_OUTPUT([
Makefile
help/Makefile
help/C/Makefile
help/fr/Makefile
help/tips/Makefile
intl/Makefile
macros/Makefile
pixmaps/Makefile
pixmaps/flags/Makefile
po/Makefile.in
src/Makefile
])
